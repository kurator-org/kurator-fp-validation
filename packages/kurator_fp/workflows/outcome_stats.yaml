#####################################################################################
# outcome_stats.yaml
#####################################################################################
#
# This workflow:
#
# Example command-line usage:
# kurator -f outcome_stats.yaml
#         -p inputfile=packages/kurator_fp/data/occurrence_qc.json
#         -l DEBUG (optional)
#
# Requires:
# jython pip install configparser
# jython pip install xlsxwriter
# jython pip install unidecode
#
#####################################################################################
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# __author__ = "Robert A. Morris, David B. Lowery"
# __copyright__ = "Copyright 2017 President and Fellows of Harvard College"
# __version__ = "outcome_stats.yaml 2017-05-24T11:09:22-04:00"

imports:

- classpath:/org/kurator/akka/types.yaml

components:

# Inline python actor to demonstrate making a workspace on the fly to use for 
# writing temporary workflow artifacts. 
- id: MakeWorkspace
  type: PythonActor
  properties:
    code: |
        import uuid
        import os
        def on_start(options):
            print 'Started MakeWorkspace'
            print 'MakeWorkspace options: %s' % options
            if options.has_key('workspace') == False:
                options['workspace'] ='./workspace_'+str(uuid.uuid1())
                if not os.path.exists(options['workspace']):
                    os.makedirs(options['workspace'])
            return options


# Create an outcome stats spreadsheet from the input json
- id: OutcomeStats
  type: PythonActor
  properties:
    module: kurator_fp.OutcomeStats
    onData: outcomestats
    inputs:
      workspace : workspace
    parameters:
      configfile: "stats.ini"
      inputfile: "occurrence_qc.json"
      outputfile: "outcomeStats.xlsx"
      rowOrigin: 1
      colOrigin: 1
    listensTo:
      - !ref MakeWorkspace

- id: WrapUp
  type: PythonActor
  properties:
    code: |
        def on_data(options):
            print 'WrapUp options: %s' % options
            print '### Finished Outcome Stats Workflow ###'
    inputs:
        workspace: workspace
        outputfile: outputfile
    listensTo:
      - !ref OutcomeStats

- id: OutcomeStatsWorkflow
  type: Workflow
  properties:
    actors:
      - !ref MakeWorkspace
      - !ref OutcomeStats
      - !ref WrapUp
    parameters:
       inputfile:
         actor: !ref OutcomeStats
         parameter: inputfile
       outputfile:
         actor: !ref OutcomeStats
         parameter: outputfile
       configfile:
         actor: !ref OutcomeStats
         parameter: configfile
       workspace:
         actor: !ref MakeWorkspace
         parameter: workspace